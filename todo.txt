
    // TODO(lamarrr): navigation hit-testing and caret

  /*
https://unicode.org/reports/tr29/
https://github.com/toptensoftware/RichTextKit/blob/main/Topten.RichTextKit/GraphemeClusterAlgorithm/GraphemeClusterAlgorithm.cs
A grapheme cluster is a sequence of one or more Unicode code points that should
be treated as a single unit by various processes: Text-editing software should
generally allow placement of the cursor only at grapheme cluster boundaries.


struct CaretPoint{Line, char}

Navigation
          /// <summary>
/// No movement
/// </summary>
None,

/// <summary>
/// Move one character to the left
/// </summary>
CharacterLeft,

/// <summary>
/// Move one character to the right
/// </summary>
CharacterRight,

/// <summary>
/// Move up one line
/// </summary>
LineUp,

/// <summary>
/// Move down one line
/// </summary>
LineDown,

/// <summary>
/// Move left one word
/// </summary>
WordLeft,

/// <summary>
/// Move right one word
/// </summary>
WordRight,

/// <summary>
/// Move up one page
/// </summary>
PageUp,

/// <summary>
/// Move down one page
/// </summary>
PageDown,

/// <summary>
/// Move to the start of the line
/// </summary>
LineHome,

/// <summary>
/// Move to the end of the line
/// </summary>
LineEnd,

/// <summary>
/// Move to the top of the document
/// </summary>
DocumentHome,

/// <summary>
/// Move to the end of the document
/// </summary>
DocumentEnd,
    */


    av_get_sample_fmt_name



https://www.ronja-tutorials.com/post/012-fresnel/
http://kylehalladay.com/archive.html
http://kylehalladay.com/blog/tutorial/2014/02/18/Fresnel-Shaders-From-The-Ground-Up.html

    Vulkan renderer
Image rendering
Font rendering (True Type)
Networking (UDP)
3D mesh rendering
Skeletal animation
Morph target animation (with sparse accessor)
Physically based rendering
Animated texturing
Normal mapping
Displacement mapping
Parallax occlusion mapping
Real time planar reflections
Cube map reflections (static and real time)
Refractions (screen space, blurred)
Interactive Water
Bloom
Edge outline
Motion Blur
Lens Flare
Light shafts
Bokeh Depth of Field
Chromatic aberration
Multithreaded rendering
Tessellation (silhouette smoothing, displacement mapping)
GPU-based particles (emit from point, mesh, animated mesh)
Soft particles
Hair particle systems (grass/vegetation)
Instanced rendering
MSAA
FXAA
TAA (Temporal Antialiasing)
Supersampling
Directional lights + cascaded shadow maps
Spotlights + shadow maps
Point lights + shadow cubemaps
Soft shadows (PCF)
BULLET Physics: rigid body, soft body
3D Audio (Xaudio2)
Input: keyboard, mouse, controller (rawinput, xinput), touch
Controller feedback (vibration, LED)
Backlog: log,input,scripting
Gamma correct, HDR rendering
Resource Manager
Screen Space Ambient Occlusion (SSAO, HBAO, MSAO)
Stochastic Screen Space Reflections
Color Grading
Sharpen filter
Eye adaption
Lua Scripting
Dynamic environment mapping
Impostor system
Tiled forward (Forward+) rendering (+2.5D culling)
Occlusion culling with gpu queries
Texture atlas packing
Tiled decals
Frame Profiler
Voxel Global Illumination
Reversed Z-buffer
Force Fields GPU simulation
Particle - Depth Buffer collisions
Ocean simulation (FFT)
Translucent colored shadows
Refraction caustics
Local parallax-corrected environment maps
Volumetric light scattering
Smooth Particle Hydrodynamics (SPH) Fluid Simulation
Ray tracing, path tracing (on GPU)
Entity-Component System (Data oriented design)
Lightmap baking (with GPU path tracing)
Job system
Inverse Kinematics
Springs, Colliders
Variable Rate Shading
Real time ray tracing: ambient occlusion, shadows, reflections (DXR and Vulkan raytracing)
Screen Space Contact Shadows
Stochastic alphatest transparency
Surfel GI
HDR display output
Dynamic Diffuse Global Illumination (DDGI)
Procedural terrain generator
Expressions
Humanoid rig
Animation retargeting
Video decoding: H264