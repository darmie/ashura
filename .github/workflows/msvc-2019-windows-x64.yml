name: msvc-2019:windows

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-2022

    strategy:
      matrix:
        build_mode: ["Release", "Debug"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache and Install Dependencies
        id: cache-and-install
        uses: actions/cache@v3
        with:
          path: |
            VULKAN_SDK
            SDL/build
            SDL/include
            vcpkg
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      
      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true  
        if: steps.cache-and-install.outputs.cache-hit != 'true' 
      
      - name: Install SDL3
        run: |
          git clone https://github.com/libsdl-org/SDL
          cd SDL && mkdir build
          cd build && cmake .. -DSDL_STATIC=ON
          cmake --build . --config Release --target install
        if: steps.cache-and-install.outputs.cache-hit != 'true' 

      - name: Install vcpkg
        env:
          VULKAN_SDK: ${{ github.workspace }}/VULKAN_SDK
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg && ./bootstrap-vcpkg.bat
          vcpkg integrate install
          copy ..\vcpkg.json .
          vcpkg install --triplet x64-windows 
        if: steps.cache-and-install.outputs.cache-hit != 'true' 

      - name: Configure and build Ashura
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build . --config ${{matrix.build_mode}}

      - name: Run Ashura Test
        run: cd build/ashura/${{matrix.build_mode}}/ && ./ashura_test.exe
